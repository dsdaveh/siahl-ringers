---
title: "SIAHL Stats EDA"
format: html
editor: visual
---

```{r}
#| message: false
#| warning: false
library(tidyverse)
library(janitor)
library(rvest)
library(xml2)

source('siahl-utils.R')

players <- readRDS(file = "players_2023_winter.RDS") %>% 
    mutate(across(where(~ all(!is.na(as.numeric(.)))), as.numeric, .names = "{.col}"))
games <- readRDS(file = "games_2023_winter.RDS") %>% 
    mutate(across(where(~ all(!is.na(as.numeric(.)))), as.numeric, .names = "{.col}"))
scorecards <- readRDS(file = 'games_tables.RDS')

```

Players in more than one division

```{r}
multi_div <- players %>% 
    count(Name) %>% 
    filter(n > 1)

players_multi <- multi_div %>% 
    left_join(players, by = "Name") 
```

```{r}
xleague_stats <- players_multi %>% 
    mutate(PpG = Pts / GP,
           GpG = Goals / GP,
           DivLevel = str_extract(Division, '\\d+') %>% as.numeric()) %>% 
    group_by(Name) %>% 
    arrange(Division) %>% 
    summarise(n_leagues = n(),
              best_level = min(DivLevel),
              gp_as_ringer = sum(ifelse(DivLevel > (best_level + 2), GP, 0)),
              # min_Goals = min(Goals),
              # max_Goals = max(Goals),
              # min_Pts = min(Pts),
              # max_Pts = max(Pts),
              min_PpG = min(PpG),
              max_PpG = max(PpG),
              PpG_spread = last(PpG) - first(PpG),
              GpG_spread = last(GpG) - first(GpG),
              Div_spread = last(DivLevel) - first(DivLevel),
              `L/H Divs` = sprintf("%s-%s", first(Division), last(Division)) )
```

```{r}
ringers <- xleague_stats %>% filter(Div_spread > 2)
```

Which teams have the most ringers

```{r}
all_teams <- players %>% 
    mutate(DivLevel = str_extract(Division, '\\d+') %>% as.numeric()) %>% 
    left_join(ringers %>% select(Name, ringer_level = best_level) , by = 'Name') %>% 
    mutate(ringer_count = ifelse((DivLevel - ringer_level) > 2, 1, 0),
           ringer_count = ifelse(is.na(ringer_count), 0, ringer_count))

team_stats <- all_teams %>% 
    group_by(Team, Division, Rank) %>% 
    summarise(ringer_count_all = sum(ringer_count, na.rm = TRUE),
              ringer_games_count = sum(ringer_count * GP, na.rm = TRUE),
              .groups = 'drop')
```

```{r}
#WIP
game_id <- "360218*"
g1 <- scorecards[[game_id]]
division = g1 %>% scorecard_division()
team = g1 %>% scorecard_teamname(home = TRUE)
h_ringers <- all_teams %>% 
    filter(Division == division,
           Team == team,
           ringer_count > 0  )
xgame <- game_list[1, ] %>% 
    mutate(vg = g1 %>% scorecard_goals(home = TRUE) %>% nrow(),
           hg = g1 %>% scorecard_goals(home = FALSE) %>% nrow(),
           vg_adj = g1 %>% scorecard_goals(home = TRUE, remove_ringer_goals = TRUE) %>% nrow(),
           hg_adj = g1 %>% scorecard_goals(home = FALSE, remove_ringer_goals = TRUE) %>% nrow())
g1_home <- g1 %>% scorecard_goals(home = TRUE)
game_url <- sprintf("%soss-scoresheet?game_id=%s&mode=display", 
                                 base_url ,str_extract(game_id, '\\d+'))
goals <- g1_home %>% 
    mutate(goal_seq = 1:n(),
           division = g1 %>% scorecard_division(),
           team = g1 %>% scorecard_teamname(home = TRUE))
```

```{r}
home_points <- function(home_goals, visitor_goals) {
    if(home_goals == visitor_goals) return(1)
    if(home_goals > visitor_goals) return(2)
    return(0)
}
home_games <- games %>% filter(home == 1) %>% pull(Game)
# home_games <- games[1412:1987, ] %>% filter(home == 1) %>% pull(Game)
progress_count <- 0
games_adj <- tibble()
for (game_id in home_games) {
    if((progess_count <- progress_count + 1) %% 100 == 0) message("...", progress_count)
    scorecard <- scorecards[[game_id]]
    game_row <- games %>% 
        filter(Game == game_id, home == 1 ) %>% 
        mutate(h_goals = scorecard %>% scorecard_goals(home = TRUE) %>% nrow(),
               v_goals = scorecard %>% scorecard_goals(home = FALSE) %>% nrow(),
               hg_adj = scorecard %>% scorecard_goals(home = TRUE, remove_ringer_goals = TRUE) %>% nrow(),
               vg_adj = scorecard %>% scorecard_goals(home = FALSE, remove_ringer_goals = TRUE) %>% nrow(),
               hdiff_adj = hg_adj - vg_adj,
               hpts = home_points(h_goals, v_goals),
               hpts_adj = home_points(hg_adj, vg_adj),
               adj_effect = hpts != hpts_adj)
    games_adj <- bind_rows(games_adj, game_row) 
}
```

```{r}
effect_by_div <- games_adj %>% 
    mutate(Level = str_extract(Division, '\\d+')) %>% 
    group_by(Level) %>% 
    summarize(effected = sum(adj_effect) / n(), .groups = 'drop')
effect_by_div %>% 
    ggplot(aes(Level, effected)) +
    geom_col() +
    coord_flip()
```

```{r}
library(gt)
effect_by_div %>% gt()
```
