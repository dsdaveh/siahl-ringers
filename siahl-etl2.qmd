---
title: "SIAHL Stats RTL - using player lookup"
format: html
editor: visual
---

```{r}
#| message: false
#| warning: false
library(tidyverse)
library(rvest)
library(xml2)
library(polite)

# Define the URL
base_url <- "https://stats.sharksice.timetoscore.com/"

source('siahl-utils.R')
```

Get the season list

```{r}
url <- paste0(base_url, "display-stats.php?league=1")

# Read the webpage
webpage <- read_html(url)

# Get the seasons
season_menu <- webpage %>%
    html_element("select") %>% 
    html_elements("option")

seasons <- tibble(
    season_id = season_menu %>% html_attr("value"),
    season_name = season_menu %>% html_text2()
)
```

Get the team division information for `Winter 2023`

TODO: this should be input to this file

```{r}
season_id <- 0
season_current <- "Summer 2023" 
season_file <- "siahl_season_ids.RDS"

# for now limit to seasons with the new divisions (as of Spring 2015)
seasons_numbered_era <- seasons %>% 
    mutate(season_id = season_id %>% as.numeric()) %>% 
    filter(season_id > 33 | season_id == 0)

teams <- map_dfr(seasons_numbered_era$season_id, get_season_teams)

warning("TODO: save this properly")
# saveRDS(teams, 'teams-all_seasons.RDS')
# teams <- readRDS(file = 'teams-all_seasons.RDS')
```

Scrape Game and Player info (loop over teams)

```{r}
#We leverage existing data
player_file = sprintf("player_stats-all_seasons.RDS")
if (file.exists(player_file)) {
    players <- readRDS(file = player_file)
} else {
    players <- tibble()
}


# Loop over each team URL
t0 <- Sys.time()
start_at <- 1 #use this for restarts
for (iteam in start_at:nrow(teams)) {
    message(sprintf("scraping player history for %s in %s (%d/%d) @ %s... ", 
        teams$team[iteam], teams$division[iteam], iteam, nrow(teams),
        format(Sys.time(), "%H:%M:%S %Z")), appendLF = FALSE)
    
    team_name = teams$team[iteam]
    team_webpage <- read_html(teams$team_stats[iteam])
    
    team_tables <- team_webpage %>% html_nodes("table")
    if (length(team_tables) < 2) next     # catch corner case: eg. display-schedule?team=2711&season=48&league=1&stat_class=1
    roster_table <- team_tables %>% .[2] %>% html_elements('td a') 
    roster_urls <- tibble(Name = roster_table %>% html_text2(),
                          player_url = roster_table %>% html_attr('href'))
    
    if (nrow(roster_urls) > 0) {   # catch corner case with no roster: https://stats.sharksice.timetoscore.com/display-schedule?team=4686&season=51&league=1&stat_class=1
        for (iplayer in 1:nrow(roster_urls)) {
            player_row <- roster_urls[iplayer, ]
            known_players <- suppressWarnings(players$player_url %>% unique)
            if (player_row$player_url %in% known_players) next
            player_url <- sprintf("%s%s", base_url, player_row$player_url)
            player_table <- read_html(player_url) %>% 
                html_element('#playerstattable') 
                if (length(player_table) <= 0) next #corner case : eg display-player-stats.php?player=59562
            player_teams <- player_table %>% 
                html_table() %>% 
                promote_header() %>% 
                mutate(Name = player_row$Name,
                       player_url = player_row$player_url)
            players <- bind_rows(players, player_teams)
        }
    }
    elapsed <- Sys.time() - t0
    t0 <- Sys.time()
    print(elapsed)
    start_at <- start_at + 1
}

```

Save files to disk

```{r}
player_file = sprintf("player_stats-all_seasons.RDS")
#saveRDS(seasons, file = season_file)

#backup before saving
if (file.exists(player_file)) {
    #backup the existing game file
    backup_name <- str_replace(player_file, '\\.RDS', 
                               format(file.info(player_file)$mtime, '-%Y-%m-%d-%H%M%S.RDS'))
    if(file.copy(player_file, backup_name, copy.date = TRUE)) {
        message('Backed up ', player_file, ' as ', backup_name)
    } else {
        warning('Backup failed (existing backup file?)')
    }
}
saveRDS(players, file = player_file)

```
