---
title: "SIAHL Stats EDA"
format: html
editor: visual
---

```{r}
#| message: false
#| warning: false
library(tidyverse)
library(rvest)
library(xml2)
library(polite)
```

```{r}
# Define the URL
base_url <- "https://stats.sharksice.timetoscore.com/"
#session <- bow(base_url)

promote_header <- function(df) { 
    names(df) <- df[1,]
    df[-1, ] 
}

get_scoring_tbl <- function(box_score, home = TRUE) {
    list_num = ifelse(home, 2, 1)
    scoring <- box_score[list_num] %>% html_table() %>% .[[1]] %>% 
        promote_header() %>% 
        clean_names()
}
```

Get the team division information

```{r}
url <- paste0(base_url, "display-stats.php?league=1&season=56")

# Read the webpage
webpage <- read_html(url)

# Scrape the Adult Division names and team rows
table_rows <- webpage %>%
  html_elements("tr") 

# Initialize an empty tibble for storing results
teams <- tibble()

# Initialize a variable to store the current division
current_division <- ""

# Loop over each table row
for (i in 1:length(table_rows)) {
  # Get the row
  row <- table_rows[[i]]
  team_extract <- row %>% html_elements("td a") %>%  html_text(trim = TRUE)

  # Check if it's a division row
  if (row %>% html_text() %>% str_detect("Adult Division")) {
    current_division <- row %>% html_text()
    rank <- 1
  # Check if it's a team row
  } else if (length(team_extract) > 0) {
    team_name <- row %>% html_elements("td a") %>%  html_text(trim = TRUE)
    team_stats <- paste0(base_url, row %>% html_elements("td a") %>%  html_attr("href"))

    team_data <- tibble(
      team = team_name,
      team_id = team_stats %>%  str_extract('\\?team=\\d+') %>% str_extract('\\d+'),
      team_stats = team_stats,
      division = current_division %>% str_replace('Adult Division ', ''),
      division_rank = rank
    )
    rank = rank + 1

    # Append the team data to final_data
    teams <- bind_rows(teams, team_data)
  }
}
```

Scrape Game and Player info (loop over teams)

```{r}
# Initialize an empty tibble for storing results
player_file = sprintf("player_stats-%s.RDS", now())
players <- tibble() 

# games is more intensive, so we leverage existing data
game_file = "games_stats.RDS"
if (file.exists(game_file)) {
    #backup the existing game file
    backup_name <- str_replace(game_file, '\\.RDS', 
                               format(file.info(game_file)$mtime, '-%Y-%m-%d-%H%M%S.RDS'))
    if(file.copy(game_file, backup_name, copy.date = TRUE)) {
            message('Backed up ', game_file, ' as ', backup_name)
    } else {
        warning('Backup failed (existing backup file?)')
    }
    games <- readRDS(file = game_file)
} else {
    games <- tibble()
}

# Loop over each team URL
#for (iteam in 1:nrow(teams)) {
for (iteam in 36:36) {
    message(sprintf("scraping stats for %s in %s (%d/%d)", 
        teams$team[iteam], teams$division[iteam], iteam, nrow(teams)))
    
    team_name = teams$team[iteam]
    team_webpage <- read_html(teams$team_stats[iteam])
    
    team_tables <- team_webpage %>% html_nodes("table")
    player_stats <- team_tables %>% .[2] %>% html_table(header = TRUE) %>% .[[1]] %>% promote_header()
    game_list <-    team_tables %>% .[1] %>% html_table(header = TRUE) %>% .[[1]] %>% promote_header()
    
    player_stats <- player_stats %>% 
        mutate(across(3:ncol(.), as.numeric)) %>% 
        mutate(Team = teams$team[iteam], 
               Division = teams$division[iteam], 
               Rank = teams$division_rank[iteam])

  
  # Append the table to final_data
  players <- bind_rows(players, player_stats)

  Sys.sleep(10)
}

```
```{r}
saveRDS(players, file = player_file)

#backup before saving
if (file.exists(game_file)) {
    #backup the existing game file
    backup_name <- str_replace(game_file, '\\.RDS', 
                               format(file.info(game_file)$mtime, '-%Y-%m-%d-%H%M%S.RDS'))
    if(file.copy(game_file, backup_name, copy.date = TRUE)) {
        message('Backed up ', game_file, ' as ', backup_name)
    } else {
        warning('Backup failed (existing backup file?)')
    }
}
saveRDS(all_games, file = game_file)
```

